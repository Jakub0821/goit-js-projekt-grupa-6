{"mappings":"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","sources":["<anon>","src/partials/local-storage.js"],"sourcesContent":["\n      var $parcel$global =\n        typeof globalThis !== 'undefined'\n          ? globalThis\n          : typeof self !== 'undefined'\n          ? self\n          : typeof window !== 'undefined'\n          ? window\n          : typeof global !== 'undefined'\n          ? global\n          : {};\n  \nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequired7c6\"];\n\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequired7c6\"] = parcelRequire;\n}\n\nvar parcelRegister = parcelRequire.register;\nparcelRegister(\"lsPEg\", function(module, exports) {\nlet SHOPPING_LIST_STORAGE_KEY = \"storage-of-books\";\nlet shoppingList = JSON.parse(localStorage.getItem(SHOPPING_LIST_STORAGE_KEY)) || [];\nlet divElement = document.querySelector(\".shopping ul\");\nlet pageSize = 3;\nlet totalPages = Math.ceil(shoppingList.length / pageSize);\nlet currentPage = 1;\nlet startIndex = (currentPage - 1) * pageSize;\nlet endIndex = startIndex + pageSize;\nlet itemsOnPage = shoppingList.slice(startIndex, endIndex);\nfunction renderMarkUp() {\n    divElement.innerHTML = shoppingList.map(({ _id, title, author, description, list_name, book_image, amazon_product_url, buy_links: [apple] })=>{\n        return `\n        <article class=\"shopping__card\">\n          <div class=\"grid-img\">\n            <img class=\"shopping__card-img\" src=\"${book_image}\" alt=\"${title}\" />\n          </div>\n\n          <div class=\"grid-title\">\n            <h3 class=\"shopping__card-title\">${title}</h3>\n            <p class=\"shopping__card-category\">${list_name}</p>\n          </div>\n\n          <div class=\"grid-description\">\n            <p class=\"shopping__card-description\">${description}</p>\n          </div>\n\n          <div class=\"grid-author\">\n            <p class=\"shopping__card-author\">${author}</p>\n          </div>\n\n          <div class=\"grid-shoplist\">\n            <ul class=\"shopping__card-shoplist\">\n              <li class=\"store\">\n                <a \"modal-shop-img\" href=\"${amazon_product_url}\" target=\"_blank\" rel=\"noopener noreferrer nofollow\" aria-label=\"Amazon link\">\n                  <img class=\"modal-shop-img shopping-shopimg amazon\" src=\"${amazonIconPath}\" alt=\"Amazon link\" alt=\"Amazon live page\"/>\n                </a>\n              </li>\n              <li class=\"store\">\n                <a \"modal-shop-img\" href=\"${apple.url}\" target=\"_blank\" rel=\"noopener noreferrer nofollow\" aria-label=\"Apple Books link\">\n                  <img class=\"modal-shop-img shopping-shopimg apple\" src=\"${appleBooksIconPath}\" alt=\"Apple Books link\" />\n                </a>\n              </li>\n            </ul>\n          </div>\n          <button class=\"shopping__card-btn\" type=\"button\" data-book-id=\"${_id} aria-label=\"Remove book from shopping list\">\n            <svg class=\"icon-trash\" data-book-id=\"${_id}\" width=\"17\" height=\"17\">\n              <use href=\"${svgTrashIcon}#icon-trash\"></use>\n            </svg>\n          </button>\n        </article>\n        `;\n    }).join(\"\");\n}\nfunction isEmpty() {\n    if (!shoppingList.length) {\n        divElement.innerHTML = `<div class=\"is-empty__wrapper\"><p class=\"is-empty__info\">This page is empty, add some books and proceed to order.</p><img class=\"is-empty__picture\" src=\"${emptyListStubImage}\" alt=\"Shop is Empty\"></div >`;\n        return;\n    }\n    divElement.insertAdjacentHTML(\"beforeend\", renderMarkUp(itemsOnPage));\n}\nisEmpty();\ndivElement.addEventListener(\"click\", (event)=>{\n    if (event.target.closest(\".shopping__card-btn\")) {\n        let BookID = event.target.getAttribute(\"data-book-id\");\n        let bookIndex = shoppingList.findIndex((bookInStorage)=>bookInStorage._id === BookID);\n        shoppingList.splice(bookIndex, 1);\n        localStorage.setItem(SHOPPING_LIST_STORAGE_KEY, JSON.stringify(shoppingList));\n        if (!shoppingList.length) {\n            divElement.innerHTML = `<div class=\"is-empty__wrapper\"><p class=\"is-empty__info\">This page is empty, add some books and proceed to order.</p><img class=\"is-empty__picture\" src=\"${emptyListStubImage}\" alt=\"Shop is Empty\"></div >`;\n            return;\n        } else if (!sliceArrayBooks().length) {\n            previousButton.click();\n            destroyChildElement(paginationContainerPages);\n        } else {\n            divElement.innerHTML = renderMarkUp(sliceArrayBooks());\n            console.log(sliceArrayBooks());\n            destroyChildElement(paginationContainerPages);\n        }\n        checkingArrayBooks();\n    }\n});\nfor(let i = 1; i <= totalPages; i++){\n    if (shoppingList.length <= 3) return;\n    let pageNumber = i;\n    let button = document.createElement(\"button\");\n    button.classList.add(\"paginations__btn\");\n    button.classList.add(\"paginations__btn--pages\");\n    button.textContent = i;\n    activDisplayFlexOnElement(paginationContainerBackBtn);\n    activDisplayFlexOnElement(paginationContainerEndBtn);\n    button.addEventListener(\"click\", ()=>{\n        currentPage = pageNumber;\n        deleteMurkup();\n        createNewBooks();\n        removeDisableforElement(startButton);\n        removeDisableforElement(endButton);\n    });\n    paginationContainerPages.appendChild(button);\n}\nfunction initShoppingList() {\n    renderMarkUp();\n}\nwindow.addEventListener(\"DOMContentLoaded\", initShoppingList);\npaginationContainerPages.firstChild.classList.add(\"active\");\npaginationsSection.addEventListener(\"click\", handlerPaginationsButtonsStartPreviousNextStart);\nfunction handlerPaginationsButtonsStartPreviousNextStart(event) {\n    let activButton = document.querySelector(\".active\");\n    console.log(event.target);\n    if (event.target.tagName !== \"BUTTON\") return;\n    switch(event.target){\n        case previousButton:\n            if (currentPage > 1) {\n                currentPage--;\n                deleteMurkup();\n                createNewBooks();\n                removeDisableforElement(endButton);\n                activButton.classList.remove(\"active\");\n                activButton.previousElementSibling.classList.add(\"active\");\n            }\n            break;\n        case nextButton:\n            if (currentPage < totalPages) {\n                currentPage++;\n                deleteMurkup();\n                createNewBooks();\n                removeDisableforElement(startButton);\n                activButton.classList.remove(\"active\");\n                activButton.nextElementSibling.classList.add(\"active\");\n            }\n            break;\n        case startButton:\n            currentPage = 1;\n            deleteMurkup();\n            createNewBooks();\n            addDisableforElement(startButton);\n            removeDisableforElement(endButton);\n            highlighteThe\\u0421urrent\\u0420age(paginationContainerPages.firstChild);\n            break;\n        case endButton:\n            currentPage = totalPages;\n            deleteMurkup();\n            createNewBooks();\n            addDisableforElement(endButton);\n            removeDisableforElement(startButton);\n            highlighteThe\\u0421urrent\\u0420age(paginationContainerPages.lastElementChild);\n            break;\n        default:\n            break;\n    }\n}\npaginationContainerPages.addEventListener(\"click\", handleButtonPaginationContainerPages);\nfunction handleButtonPaginationContainerPages(event) {\n    if (event.target.tagName !== \"BUTTON\") return;\n    highlighteThe\\u0421urrent\\u0420age(event.target);\n}\nfunction deleteMurkup() {\n    divElement.innerHTML = \"\";\n}\nfunction sliceArrayBooks() {\n    startIndex = (currentPage - 1) * pageSize;\n    endIndex = startIndex + pageSize;\n    return shoppingList.slice(startIndex, endIndex);\n}\nfunction createNewBooks() {\n    divElement.insertAdjacentHTML(\"beforeend\", renderMarkUp(sliceArrayBooks()));\n}\nfunction removeDisableforElement(element) {\n    element.disabled = false;\n}\nfunction addDisableforElement(element) {\n    element.disabled = true;\n}\nfunction activDisplayFlexOnElement(element) {\n    element.style.display = \"flex\";\n}\nfunction activDisplayNoneOnElement(element) {\n    element.style.display = \"none\";\n}\nfunction destroyChildElement(element) {\n    let a = shoppingList.length / pageSize;\n    if (Math.round(a) === a) return element.lastElementChild.remove();\n    else return;\n}\nfunction checkingArrayBooks() {\n    if (shoppingList.length <= 3) {\n        activDisplayNoneOnElement(paginationContainerBackBtn);\n        activDisplayNoneOnElement(paginationContainerEndBtn);\n        paginationContainerPages.innerHTML = \"\";\n    }\n}\nfunction highlighteThe\\u0421urrent\\u0420age(element) {\n    let activButton = document.querySelector(\".active\");\n    if (activButton) activButton.classList.remove(\"active\");\n    element.classList.add(\"active\");\n}\n\n});\n\n\nparcelRequire(\"lsPEg\");\n\n//# sourceMappingURL=index.8daf1be3.js.map\n","let SHOPPING_LIST_STORAGE_KEY = 'storage-of-books';\nlet shoppingList =\n  JSON.parse(localStorage.getItem(SHOPPING_LIST_STORAGE_KEY)) || [];\nlet divElement = document.querySelector('.shopping ul');\n\nlet pageSize = 3;\nlet totalPages = Math.ceil(shoppingList.length / pageSize);\nlet currentPage = 1;\nlet startIndex = (currentPage - 1) * pageSize;\nlet endIndex = startIndex + pageSize;\nlet itemsOnPage = shoppingList.slice(startIndex, endIndex);\n\nfunction renderMarkUp() {\n  divElement.innerHTML = shoppingList\n    .map(\n      ({\n        _id,\n        title,\n        author,\n        description,\n        list_name,\n        book_image,\n        amazon_product_url,\n        buy_links: [apple],\n      }) => {\n        return `\n        <article class=\"shopping__card\">\n          <div class=\"grid-img\">\n            <img class=\"shopping__card-img\" src=\"${book_image}\" alt=\"${title}\" />\n          </div>\n\n          <div class=\"grid-title\">\n            <h3 class=\"shopping__card-title\">${title}</h3>\n            <p class=\"shopping__card-category\">${list_name}</p>\n          </div>\n\n          <div class=\"grid-description\">\n            <p class=\"shopping__card-description\">${description}</p>\n          </div>\n\n          <div class=\"grid-author\">\n            <p class=\"shopping__card-author\">${author}</p>\n          </div>\n\n          <div class=\"grid-shoplist\">\n            <ul class=\"shopping__card-shoplist\">\n              <li class=\"store\">\n                <a \"modal-shop-img\" href=\"${amazon_product_url}\" target=\"_blank\" rel=\"noopener noreferrer nofollow\" aria-label=\"Amazon link\">\n                  <img class=\"modal-shop-img shopping-shopimg amazon\" src=\"${amazonIconPath}\" alt=\"Amazon link\" alt=\"Amazon live page\"/>\n                </a>\n              </li>\n              <li class=\"store\">\n                <a \"modal-shop-img\" href=\"${apple.url}\" target=\"_blank\" rel=\"noopener noreferrer nofollow\" aria-label=\"Apple Books link\">\n                  <img class=\"modal-shop-img shopping-shopimg apple\" src=\"${appleBooksIconPath}\" alt=\"Apple Books link\" />\n                </a>\n              </li>\n            </ul>\n          </div>\n          <button class=\"shopping__card-btn\" type=\"button\" data-book-id=\"${_id} aria-label=\"Remove book from shopping list\">\n            <svg class=\"icon-trash\" data-book-id=\"${_id}\" width=\"17\" height=\"17\">\n              <use href=\"${svgTrashIcon}#icon-trash\"></use>\n            </svg>\n          </button>\n        </article>\n        `;\n      }\n    )\n    .join('');\n}\n\nfunction isEmpty() {\n  if (!shoppingList.length) {\n    divElement.innerHTML = `<div class=\"is-empty__wrapper\"><p class=\"is-empty__info\">This page is empty, add some books and proceed to order.</p><img class=\"is-empty__picture\" src=\"${emptyListStubImage}\" alt=\"Shop is Empty\"></div >`;\n    return;\n  }\n  divElement.insertAdjacentHTML('beforeend', renderMarkUp(itemsOnPage));\n}\n\nisEmpty();\n\ndivElement.addEventListener('click', event => {\n  if (event.target.closest('.shopping__card-btn')) {\n    let BookID = event.target.getAttribute('data-book-id');\n\n    let bookIndex = shoppingList.findIndex(\n      bookInStorage => bookInStorage._id === BookID\n    );\n\n    shoppingList.splice(bookIndex, 1);\n\n    localStorage.setItem(\n      SHOPPING_LIST_STORAGE_KEY,\n      JSON.stringify(shoppingList)\n    );\n\n    if (!shoppingList.length) {\n      divElement.innerHTML = `<div class=\"is-empty__wrapper\"><p class=\"is-empty__info\">This page is empty, add some books and proceed to order.</p><img class=\"is-empty__picture\" src=\"${emptyListStubImage}\" alt=\"Shop is Empty\"></div >`;\n      return;\n    } else if (!sliceArrayBooks().length) {\n      previousButton.click();\n      destroyChildElement(paginationContainerPages);\n    } else {\n      divElement.innerHTML = renderMarkUp(sliceArrayBooks());\n      console.log(sliceArrayBooks());\n      destroyChildElement(paginationContainerPages);\n    }\n    checkingArrayBooks();\n  }\n});\n\nfor (let i = 1; i <= totalPages; i++) {\n  if (shoppingList.length <= 3) {\n    return;\n  }\n  let pageNumber = i;\n  let button = document.createElement('button');\n  button.classList.add('paginations__btn');\n  button.classList.add('paginations__btn--pages');\n  button.textContent = i;\n\n  activDisplayFlexOnElement(paginationContainerBackBtn);\n  activDisplayFlexOnElement(paginationContainerEndBtn);\n\n  button.addEventListener('click', () => {\n    currentPage = pageNumber;\n    deleteMurkup();\n    createNewBooks();\n    removeDisableforElement(startButton);\n    removeDisableforElement(endButton);\n  });\n  paginationContainerPages.appendChild(button);\n}\n\nfunction initShoppingList() {\n  renderMarkUp();\n}\nwindow.addEventListener('DOMContentLoaded', initShoppingList);\n\npaginationContainerPages.firstChild.classList.add('active');\n\npaginationsSection.addEventListener(\n  'click',\n  handlerPaginationsButtonsStartPreviousNextStart\n);\nfunction handlerPaginationsButtonsStartPreviousNextStart(event) {\n  let activButton = document.querySelector('.active');\n  console.log(event.target);\n  if (event.target.tagName !== 'BUTTON') {\n    return;\n  }\n\n  switch (event.target) {\n    case previousButton:\n      if (currentPage > 1) {\n        currentPage--;\n        deleteMurkup();\n        createNewBooks();\n        removeDisableforElement(endButton);\n\n        activButton.classList.remove('active');\n        activButton.previousElementSibling.classList.add('active');\n      }\n      break;\n    case nextButton:\n      if (currentPage < totalPages) {\n        currentPage++;\n        deleteMurkup();\n        createNewBooks();\n        removeDisableforElement(startButton);\n\n        activButton.classList.remove('active');\n        activButton.nextElementSibling.classList.add('active');\n      }\n      break;\n    case startButton:\n      currentPage = 1;\n      deleteMurkup();\n      createNewBooks();\n      addDisableforElement(startButton);\n      removeDisableforElement(endButton);\n      highlighteTheСurrentРage(paginationContainerPages.firstChild);\n      break;\n    case endButton:\n      currentPage = totalPages;\n      deleteMurkup();\n      createNewBooks();\n      addDisableforElement(endButton);\n      removeDisableforElement(startButton);\n      highlighteTheСurrentРage(paginationContainerPages.lastElementChild);\n      break;\n    default:\n      break;\n  }\n}\n\npaginationContainerPages.addEventListener(\n  'click',\n  handleButtonPaginationContainerPages\n);\n\nfunction handleButtonPaginationContainerPages(event) {\n  if (event.target.tagName !== 'BUTTON') {\n    return;\n  }\n  highlighteTheСurrentРage(event.target);\n}\n\nfunction deleteMurkup() {\n  divElement.innerHTML = '';\n}\nfunction sliceArrayBooks() {\n  startIndex = (currentPage - 1) * pageSize;\n  endIndex = startIndex + pageSize;\n  return shoppingList.slice(startIndex, endIndex);\n}\nfunction createNewBooks() {\n  divElement.insertAdjacentHTML('beforeend', renderMarkUp(sliceArrayBooks()));\n}\nfunction removeDisableforElement(element) {\n  element.disabled = false;\n}\nfunction addDisableforElement(element) {\n  element.disabled = true;\n}\nfunction activDisplayFlexOnElement(element) {\n  element.style.display = 'flex';\n}\nfunction activDisplayNoneOnElement(element) {\n  element.style.display = 'none';\n}\nfunction destroyChildElement(element) {\n  let a = shoppingList.length / pageSize;\n  if (Math.round(a) === a) {\n    return element.lastElementChild.remove();\n  } else {\n    return;\n  }\n}\nfunction checkingArrayBooks() {\n  if (shoppingList.length <= 3) {\n    activDisplayNoneOnElement(paginationContainerBackBtn);\n    activDisplayNoneOnElement(paginationContainerEndBtn);\n    paginationContainerPages.innerHTML = '';\n  }\n}\nfunction highlighteTheСurrentРage(element) {\n  let activButton = document.querySelector('.active');\n\n  if (activButton) {\n    activButton.classList.remove('active');\n  }\n\n  element.classList.add('active');\n}\n"],"names":["$parcel$global","globalThis","self","window","global","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","parcelRegister","SHOPPING_LIST_STORAGE_KEY","shoppingList","JSON","parse","localStorage","getItem","divElement","document","querySelector","totalPages","Math","ceil","length","currentPage","startIndex","endIndex","itemsOnPage","slice","renderMarkUp","innerHTML","map","_id","title","author","description","list_name","book_image","amazon_product_url","buy_links","apple","amazonIconPath","url","appleBooksIconPath","svgTrashIcon","join","isEmpty","emptyListStubImage","insertAdjacentHTML","addEventListener","event","target","closest","BookID","getAttribute","bookIndex","findIndex","bookInStorage","splice","setItem","stringify","element","a","sliceArrayBooks","console","log","previousButton","click","paginationContainerPages","round","lastElementChild","remove","activDisplayNoneOnElement","paginationContainerBackBtn","paginationContainerEndBtn","i","pageNumber","button","createElement","classList","add","textContent","activDisplayFlexOnElement","deleteMurkup","createNewBooks","removeDisableforElement","startButton","endButton","appendChild","disabled","addDisableforElement","style","display","highlighteTheСurrentРage","activButton","firstChild","paginationsSection","tagName","previousElementSibling","nextButton","nextElementSibling"],"version":3,"file":"index.8daf1be3.js.map"}